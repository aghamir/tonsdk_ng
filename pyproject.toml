[project]
name = "tonsdk_ng"
description = "Python SDK for TON"
license = "Apache-2.0"
requires-python = ">=3.10"
authors = [
    { name = "Andrey Torsunov", email = "andrey.torsunov@gmail.com"},
    # "tonfactory.org",
]
homepage = "https://github.com/gtors/tonsdk_ng"
keywords = ["TON", "TON SDK", "TON utils", "TON tools"]
classifiers = [
    "Environment :: Console",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: Apache Software License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Adaptive Technologies",
]
dependencies = [
    "pynacl>=1.4.0",
    "bitarray~=2.6.0",
    "typing-extensions~=4.11",
]
readme="README.md"
dynamic = ["version"]

[project.urls]
Changelog = "https://github.com/gtors/tonsdk_ng/blob/master/CHANGELOG.md"
Homepage = "https://github.com/gtors/tonsdk_ng"
Source = "https://github.com/gtors/tonsdk_ng"

[project.optional-dependencies]
http_api = ["httpj"]
full = ["httpj"]
dev = [
    "black",
    "commitizen",
    "furo",
    "isort",
    "mypy",
    "pre-commit",
    "pytest",
    "ruff",
]

[build-system]
requires = ["hatchling", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "tonsdk_ng/__version__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/tonsdk_ng",
    "/CHANGELOG.md",
    "/README.md",
]

[tool.hatch.envs.default]
features = ["dev"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
version_files = [
    "tonsdk_ng/__version__.py:__version__"
]
tag_format = "$version"
update_changelog_on_bump = true

[tool.black]
target-version = ["py310", "py311"]
line-length = 80

[tool.ruff]
line-length = 80
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".hypothesis",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".x",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
target-version = "py310"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    #"I",
]
ignore = [
    # star imports
    "F405", "F403",
    # lambda expression assignment
    "E731",
    # Loop control variable not used within loop body
    "B007",
    # Abstract class without abstract methods
    "B024",
]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.mypy]
python_version = "3.10"
strict = true
ignore_missing_imports = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
check_untyped_defs = true

[tool.isort]
profile = "black"
py_version=310
line_length = 80

[tool.coverage.run]
include = ["tonsdk_ng/*", "tests/*"]
